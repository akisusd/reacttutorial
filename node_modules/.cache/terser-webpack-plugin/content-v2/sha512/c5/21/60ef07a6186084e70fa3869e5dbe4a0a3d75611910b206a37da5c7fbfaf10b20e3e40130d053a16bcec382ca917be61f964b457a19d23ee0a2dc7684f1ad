{"map":"{\"version\":3,\"sources\":[\"/home/akos/Work/reacttutorial/src/reducers/tokenReducer.js\",\"/home/akos/Work/reacttutorial/src/reducers/songsReducer.js\",\"/home/akos/Work/reacttutorial/src/reducers/userReducer.js\",\"/home/akos/Work/reacttutorial/src/actions/redditActions.js\",\"/home/akos/Work/reacttutorial/src/reducers/index.js\",\"/home/akos/Work/reacttutorial/src/containers/Header.js\",\"/home/akos/Work/reacttutorial/src/components/Picker.js\",\"/home/akos/Work/reacttutorial/src/components/Posts.js\",\"/home/akos/Work/reacttutorial/src/containers/Reddit.js\",\"/home/akos/Work/reacttutorial/src/actions/userActions.js\",\"/home/akos/Work/reacttutorial/src/actions/songActions.js\",\"/home/akos/Work/reacttutorial/src/actions/tokenActions.js\",\"/home/akos/Work/reacttutorial/src/components/SongList/component.js\",\"/home/akos/Work/reacttutorial/src/components/SongList/index.js\",\"/home/akos/Work/reacttutorial/src/containers/Spotify.js\",\"/home/akos/Work/reacttutorial/src/containers/Footer.js\",\"/home/akos/Work/reacttutorial/src/containers/About.js\",\"/home/akos/Work/reacttutorial/src/containers/Root.js\",\"/home/akos/Work/reacttutorial/src/serviceWorker.js\",\"/home/akos/Work/reacttutorial/src/index.js\"],\"names\":[\"tokenReducer\",\"state\",\"arguments\",\"length\",\"undefined\",\"action\",\"type\",\"Object\",\"objectSpread\",\"token\",\"defaultState\",\"fetchSongsPending\",\"songsReducer\",\"songs\",\"fetchSongsError\",\"userReducer\",\"user\",\"fetchUserError\",\"selectSubreddit\",\"subreddit\",\"invalidateSubreddit\",\"fetchPosts\",\"dispatch\",\"requestPosts\",\"fetch\",\"concat\",\"then\",\"response\",\"json\",\"posts\",\"data\",\"children\",\"map\",\"child\",\"receivedAt\",\"Date\",\"now\",\"receivePosts\",\"fetchPostsIfNeeded\",\"getState\",\"postsBySubreddit\",\"isFetching\",\"didInvalidate\",\"shouldFetchPosts\",\"rootReducer\",\"combineReducers\",\"defineProperty\",\"items\",\"lastUpdated\",\"selectedSubreddit\",\"Header\",\"react_default\",\"a\",\"createElement\",\"className\",\"react_router_dom\",\"to\",\"Picker\",\"_ref\",\"value\",\"onChange\",\"options\",\"e\",\"target\",\"option\",\"key\",\"Posts\",\"post\",\"i\",\"title\",\"Reddit\",\"handleChange\",\"nextSubreddit\",\"_this\",\"props\",\"handleRefreshClick\",\"preventDefault\",\"_this$props\",\"_this$props2\",\"this\",\"prevProps\",\"_this$props3\",\"_this$props4\",\"isEmpty\",\"components_Picker\",\"toLocaleTimeString\",\"onClick\",\"style\",\"opacity\",\"components_Posts\",\"Component\",\"connect\",\"fetchUser\",\"accessToken\",\"request\",\"Request\",\"headers\",\"Headers\",\"Authorization\",\"res\",\"statusText\",\"window\",\"location\",\"href\",\"catch\",\"err\",\"fetchSongs\",\"setToken\",\"SongList\",\"nextProps\",\"ms\",\"minutes\",\"Math\",\"floor\",\"seconds\",\"toFixed\",\"song\",\"track\",\"name\",\"artists\",\"album\",\"moment\",\"added_at\",\"format\",\"msToMinutesAndSeconds\",\"duration_ms\",\"fetchPlaylistSongsPending\",\"renderSongs\",\"bindActionCreators\",\"Spotify\",\"hashParams\",\"r\",\"q\",\"hash\",\"substring\",\"exec\",\"decodeURIComponent\",\"access_token\",\"components_SongList\",\"Footer\",\"About\",\"Root\",\"store\",\"react_router\",\"path\",\"component\",\"registerValidSW\",\"swUrl\",\"config\",\"navigator\",\"serviceWorker\",\"register\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"console\",\"log\",\"onUpdate\",\"onSuccess\",\"error\",\"middleware\",\"thunk\",\"createStore\",\"reducer\",\"applyMiddleware\",\"apply\",\"render\",\"es\",\"containers_Root\",\"document\",\"getElementById\",\"URL\",\"process\",\"origin\",\"urlsToCache\",\"addEventListener\",\"event\",\"waitUntil\",\"caches\",\"open\",\"cache\",\"addAll\",\"url\",\"respondWith\",\"match\",\"contentType\",\"get\",\"status\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\"],\"mappings\":\"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\",\"sourcesContent\":[\"export const tokenReducer = (state = {}, action) => {\\n  switch (action.type) {\\n\\n  case \\\"SET_TOKEN\\\":\\n    return {\\n      ...state,\\n      token: action.token\\n    };\\n\\n  default:\\n    return state;\\n  }\\n\\n};\\n\\nexport default tokenReducer;\\n\",\"const defaultState = {\\n  fetchSongsPending: true\\n};\\n\\nexport const songsReducer = (state = defaultState, action) => {\\n\\n  switch (action.type) {\\n\\n  case \\\"FETCH_SONGS_PENDING\\\":\\n    return {\\n      ...state,\\n      fetchSongsPending: true\\n    };\\n\\n  case \\\"FETCH_SONGS_SUCCESS\\\":\\n    return {\\n      ...state,\\n      songs: action.songs,\\n      fetchSongsError: false,\\n      fetchSongsPending: false,\\n    };\\n\\n  case \\\"FETCH_SONGS_ERROR\\\":\\n    return {\\n      ...state,\\n      fetchSongsError: true,\\n      fetchSongsPending: false\\n    };\\n\\n  default:\\n    return state;\\n  }\\n\\n};\\n\\nexport default songsReducer;\\n\",\"export const userReducer = (state = {}, action) => {\\n\\n  switch (action.type) {\\n\\n  case \\\"FETCH_USER_SUCCESS\\\":\\n    return {\\n      ...state,\\n      user: action.user,\\n      fetchUserError: false\\n    };\\n\\n  case \\\"FETCH_USER_ERROR\\\":\\n    return {\\n      ...state,\\n      fetchUserError: true\\n    };\\n\\n  default:\\n    return state;\\n  }\\n\\n};\\n\\nexport default userReducer;\\n\",\"export const REQUEST_POSTS = 'REQUEST_POSTS'\\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\\nexport const SELECT_SUBREDDIT = 'SELECT_SUBREDDIT'\\nexport const INVALIDATE_SUBREDDIT = 'INVALIDATE_SUBREDDIT'\\n\\nexport const selectSubreddit = subreddit => ({\\n  type: SELECT_SUBREDDIT,\\n  subreddit\\n})\\n\\nexport const invalidateSubreddit = subreddit => ({\\n  type: INVALIDATE_SUBREDDIT,\\n  subreddit\\n})\\n\\nexport const requestPosts = subreddit => ({\\n  type: REQUEST_POSTS,\\n  subreddit\\n})\\n\\nexport const receivePosts = (subreddit, json) => ({\\n  type: RECEIVE_POSTS,\\n  subreddit,\\n  posts: json.data.children.map(child => child.data),\\n  receivedAt: Date.now()\\n})\\n\\nconst fetchPosts = subreddit => dispatch => {\\n  dispatch(requestPosts(subreddit))\\n  return fetch(`https://www.reddit.com/r/${subreddit}.json`)\\n    .then(response => response.json())\\n    .then(json => dispatch(receivePosts(subreddit, json)))\\n}\\n\\nconst shouldFetchPosts = (state, subreddit) => {\\n  const posts = state.postsBySubreddit[subreddit]\\n  if (!posts) {\\n    return true\\n  }\\n  if (posts.isFetching) {\\n    return false\\n  }\\n  return posts.didInvalidate\\n}\\n\\nexport const fetchPostsIfNeeded = subreddit => (dispatch, getState) => {\\n  if (shouldFetchPosts(getState(), subreddit)) {\\n    return dispatch(fetchPosts(subreddit))\\n  }\\n}\\n\",\"import { combineReducers } from 'redux'\\nimport tokenReducer from './tokenReducer';\\nimport songsReducer from './songsReducer';\\nimport userReducer from './userReducer';\\nimport {\\n  SELECT_SUBREDDIT, INVALIDATE_SUBREDDIT,\\n  REQUEST_POSTS, RECEIVE_POSTS\\n} from '../actions/redditActions'\\n\\nconst selectedSubreddit = (state = 'reactjs', action) => {\\n  switch (action.type) {\\n    case SELECT_SUBREDDIT:\\n      return action.subreddit\\n    default:\\n      return state\\n  }\\n}\\n\\nconst posts = (state = {\\n  isFetching: false,\\n  didInvalidate: false,\\n  items: []\\n}, action) => {\\n  switch (action.type) {\\n    case INVALIDATE_SUBREDDIT:\\n      return {\\n        ...state,\\n        didInvalidate: true\\n      }\\n    case REQUEST_POSTS:\\n      return {\\n        ...state,\\n        isFetching: true,\\n        didInvalidate: false\\n      }\\n    case RECEIVE_POSTS:\\n      return {\\n        ...state,\\n        isFetching: false,\\n        didInvalidate: false,\\n        items: action.posts,\\n        lastUpdated: action.receivedAt\\n      }\\n    default:\\n      return state\\n  }\\n}\\n\\nconst postsBySubreddit = (state = { }, action) => {\\n  switch (action.type) {\\n    case INVALIDATE_SUBREDDIT:\\n    case RECEIVE_POSTS:\\n    case REQUEST_POSTS:\\n      return {\\n        ...state,\\n        [action.subreddit]: posts(state[action.subreddit], action)\\n      }\\n    default:\\n      return state\\n  }\\n}\\n\\nconst rootReducer = combineReducers({\\n  postsBySubreddit,\\n  tokenReducer,\\n  songsReducer,\\n  userReducer,\\n  selectedSubreddit\\n})\\n\\nexport default rootReducer\\n\",\"import React from 'react';\\nimport { Link } from 'react-router-dom';\\n\\nfunction Header (){\\n return <nav className=\\\"navbar navbar-light bg-dark\\\">\\n    <form className=\\\"form-inline\\\">\\n      <Link className=\\\"btn btn-outline-success\\\" to=\\\"/reddit\\\">reddit</Link>\\n      <Link className=\\\"btn btn-outline-success\\\" to=\\\"/spotify\\\">spotify</Link>\\n    </form>\\n  </nav>\\n}\\n\\nexport default Header;\",\"import React from 'react'\\nimport PropTypes from 'prop-types'\\n\\nconst Picker = ({ value, onChange, options }) => (\\n  <span>\\n    <h1>Selected Subreddit: {value}</h1>\\n    <select className='btn btn-success' onChange={e => onChange(e.target.value)}\\n            value={value}>\\n      {options.map(option =>\\n        <option value={option} key={option}>\\n          {option}\\n        </option>)\\n      }\\n    </select>\\n  </span>\\n)\\n\\nPicker.propTypes = {\\n  options: PropTypes.arrayOf(\\n    PropTypes.string.isRequired\\n  ).isRequired,\\n  value: PropTypes.string.isRequired,\\n  onChange: PropTypes.func.isRequired\\n}\\n\\nexport default Picker\\n\",\"import React from 'react'\\nimport PropTypes from 'prop-types'\\n\\nconst Posts = ({posts}) => (\\n  <div>\\n    {posts.map((post, i) =>\\n      <div key={i}>{post.title}</div>\\n    )}\\n  </div>\\n)\\n\\nPosts.propTypes = {\\n  posts: PropTypes.array.isRequired\\n}\\n\\nexport default Posts\\n\",\"import React, { Component } from 'react'\\nimport PropTypes from 'prop-types'\\nimport { connect } from 'react-redux'\\nimport { selectSubreddit, fetchPostsIfNeeded, invalidateSubreddit } from '../actions/redditActions'\\nimport Picker from '../components/Picker'\\nimport Posts from '../components/Posts'\\n\\nclass Reddit extends Component {\\n  static propTypes = {\\n    selectedSubreddit: PropTypes.string.isRequired,\\n    posts: PropTypes.array.isRequired,\\n    isFetching: PropTypes.bool.isRequired,\\n    lastUpdated: PropTypes.number,\\n    dispatch: PropTypes.func.isRequired\\n  }\\n\\n  componentDidMount() {\\n    const { dispatch, selectedSubreddit } = this.props\\n    dispatch(fetchPostsIfNeeded(selectedSubreddit))\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    if (prevProps.selectedSubreddit !== this.props.selectedSubreddit) {\\n      const { dispatch, selectedSubreddit } = this.props\\n      dispatch(fetchPostsIfNeeded(selectedSubreddit))\\n    }\\n  }\\n\\n  handleChange = nextSubreddit => {\\n    this.props.dispatch(selectSubreddit(nextSubreddit))\\n  }\\n\\n  handleRefreshClick = e => {\\n    e.preventDefault()\\n\\n    const { dispatch, selectedSubreddit } = this.props\\n    dispatch(invalidateSubreddit(selectedSubreddit))\\n    dispatch(fetchPostsIfNeeded(selectedSubreddit))\\n  }\\n\\n  render() {\\n    const { selectedSubreddit, posts, isFetching, lastUpdated } = this.props\\n    const isEmpty = posts.length === 0\\n    return (\\n      <div className='container-fluid'>\\n        <Picker value={selectedSubreddit}\\n                onChange={this.handleChange}\\n                options={[ 'reactjs', 'frontend' ]} />\\n        <p>\\n          {lastUpdated &&\\n            <span>\\n              Last updated at {new Date(lastUpdated).toLocaleTimeString()}.\\n              {' '}\\n            </span>\\n          }\\n          {!isFetching &&\\n            <button className='btn btn-success' onClick={this.handleRefreshClick}>\\n              Refresh\\n            </button>\\n          }\\n        </p>\\n        {isEmpty\\n          ? (isFetching ? <h2>Loading...</h2> : <h2>Empty.</h2>)\\n          : <div style={{ opacity: isFetching ? 0.5 : 1 }}>\\n              <Posts posts={posts} />\\n            </div>\\n        }\\n      </div>\\n    )\\n  }\\n}\\n\\nconst mapStateToProps = state => {\\n  const { selectedSubreddit, postsBySubreddit } = state\\n  const {\\n    isFetching,\\n    lastUpdated,\\n    items: posts\\n  } = postsBySubreddit[selectedSubreddit] || {\\n    isFetching: true,\\n    items: []\\n  }\\n\\n  return {\\n    selectedSubreddit,\\n    posts,\\n    isFetching,\\n    lastUpdated\\n  }\\n}\\n\\nexport default connect(mapStateToProps)(Reddit)\\n\",\"export const fetchUserSuccess = (user) => {\\n  return {\\n    type: 'FETCH_USER_SUCCESS',\\n    user\\n  };\\n};\\n\\nexport const fetchUserError = () => {\\n  return {\\n    type: 'FETCH_USER_ERROR'\\n  };\\n};\\n\\nexport const fetchUser = (accessToken) => {\\n\\n  return dispatch => {\\n    const request = new Request('https://api.spotify.com/v1/me', {\\n      headers: new Headers({\\n        'Authorization': 'Bearer ' + accessToken\\n      })\\n    });\\n\\n    fetch(request).then(res => {\\n      // send user back to homepage if no token\\n      if(res.statusText === \\\"Unauthorized\\\") {\\n        window.location.href = './';\\n      }\\n      return res.json();\\n    }).then(res => {\\n      dispatch(fetchUserSuccess(res));\\n    }).catch(err => {\\n      dispatch(fetchUserError(err));\\n    });\\n  };\\n};\",\"export const fetchSongsPending = () => {\\n  return {\\n    type: 'FETCH_SONGS_PENDING'\\n  };\\n};\\n\\nexport const fetchSongsSuccess = (songs) => {\\n  return {\\n    type: 'FETCH_SONGS_SUCCESS',\\n    songs\\n  };\\n};\\n\\nexport const fetchSongsError = () => {\\n  return {\\n    type: 'FETCH_SONGS_ERROR'\\n  };\\n};\\n\\nexport const fetchSongs = (accessToken) => {\\n  return dispatch => {\\n    const request = new Request(`https://api.spotify.com/v1/me/player/recently-played`, {\\n      headers: new Headers({\\n        'Authorization': 'Bearer ' + accessToken\\n      })\\n    });\\n\\n    dispatch(fetchSongsPending());\\n\\n    fetch(request).then(res => {\\n      if(res.statusText === \\\"Unauthorized\\\") {\\n        window.location.href = './';\\n      }\\n      return res.json();\\n    }).then(res => {\\n      dispatch(fetchSongsSuccess(res.items));\\n    }).catch(err => {\\n      dispatch(fetchSongsError(err));\\n    });\\n  };\\n};\",\"export const setToken = (token) => {\\n  return {\\n    type: 'SET_TOKEN',\\n    token\\n  };\\n};\",\"import React, { Component } from 'react';\\nimport PropTypes from 'prop-types';\\nimport moment from 'moment';\\n\\nclass SongList extends Component {\\n\\n  componentWillReceiveProps (nextProps) {\\n    if(nextProps.token !== '' && !nextProps.fetchSongsError && nextProps.fetchSongsPending) {\\n      this.props.fetchSongs(nextProps.token);\\n    }\\n  }\\n\\n  msToMinutesAndSeconds(ms) {\\n    const minutes = Math.floor(ms / 60000);\\n    const seconds = ((ms % 60000) / 1000).toFixed(0);\\n    return minutes + \\\":\\\" + (seconds < 10 ? '0' : '') + seconds;\\n  }\\n\\n  renderSongs() {\\n    return this.props.songs.map((song, i) => {\\n      return (\\n        <div key={i} className='row'>\\n          <div className='col-sm-2'>\\n            <p>{ song.track.name }</p>\\n          </div>\\n\\n          <div className='col-sm-2'>\\n            <p>{ song.track.artists[0].name }</p>\\n          </div>\\n\\n          <div className='col-sm-2'>\\n            <p>{ song.track.album.name }</p>\\n          </div>\\n\\n          <div className='col-sm-2'>\\n            <p>{ moment(song.added_at).format('YYYY-MM-DD')}</p>\\n          </div>\\n\\n          <div className='col-sm-2'>\\n            <p>{ this.msToMinutesAndSeconds(song.track.duration_ms) }</p>\\n          </div>\\n        </div>\\n      );\\n    });\\n  }\\n\\n  render() {\\n\\n    return (\\n      <div className='container-fluid'>\\n      <h1>Last played songs</h1>\\n        <div className='row'>\\n          <div className='col-sm-2 bg-info'>\\n            <p>Title</p>\\n          </div>\\n          <div className='col-sm-2 bg-info'>\\n            <p>Artist</p>\\n          </div>\\n          <div className='col-sm-2 bg-info'>\\n            <p>Album</p>\\n          </div>\\n          <div className='col-sm-2 bg-info'>\\n            <p>Date Added</p>\\n          </div>\\n          <div className='col-sm-2 bg-info'>\\n            <p>Length</p>\\n          </div>\\n        </div>\\n        {\\n          this.props.songs && !this.props.fetchSongsPending && !this.props.fetchPlaylistSongsPending && this.renderSongs()\\n        }\\n\\n      </div>\\n    );\\n  }\\n}\\n\\nSongList.propTypes = {\\n  token: PropTypes.string,\\n  songAddedId: PropTypes.string,\\n  songId: PropTypes.oneOfType([\\n    PropTypes.string,\\n    PropTypes.number\\n  ]),\\n  songs: PropTypes.oneOfType([\\n    PropTypes.string,\\n    PropTypes.array\\n  ]),\\n  fetchSongsError: PropTypes.bool,\\n  fetchSongsPending: PropTypes.bool,\\n  fetchPlaylistSongsPending: PropTypes.bool,\\n  fetchSongs: PropTypes.func,\\n};\\n\\nexport default SongList;\\n\",\"import SongList from \\\"./component\\\";\\nimport { connect } from \\\"react-redux\\\";\\nimport { bindActionCreators } from \\\"redux\\\";\\nimport { fetchSongs } from '../../actions/songActions';\\n\\nconst mapStateToProps = (state) => {\\n\\n  return {\\n    token: state.tokenReducer.token ? state.tokenReducer.token : '',\\n    songs: state.songsReducer.songs ? state.songsReducer.songs : '',\\n    fetchSongsError: state.songsReducer.fetchSongsError,\\n    fetchSongsPending: state.songsReducer.fetchSongsPending,\\n    fetchPlaylistSongsPending: state.songsReducer.fetchPlaylistSongsPending,\\n  };\\n\\n};\\n\\nconst mapDispatchToProps = (dispatch) => {\\n\\n  return bindActionCreators({\\n    fetchSongs\\n  }, dispatch);\\n\\n};\\nexport default connect(mapStateToProps, mapDispatchToProps)(SongList);\\n\",\"import React, { Component } from 'react';\\nimport PropTypes from 'prop-types';\\nimport { bindActionCreators } from 'redux';\\nimport { connect } from 'react-redux';\\nimport { fetchUser } from '../actions/userActions';\\nimport { fetchSongs } from '../actions/songActions';\\nimport { setToken } from '../actions/tokenActions';\\nimport SongList from '../components/SongList';\\n\\nclass Spotify extends Component {\\n\\t\\n\\tcomponentDidMount() {\\n\\n\\t  let hashParams = {};\\n\\t  let e, r = /([^&;=]+)=?([^&;]*)/g,\\n\\t    q = window.location.hash.substring(1);\\n\\t  while ( e = r.exec(q)) {\\n\\t    hashParams[e[1]] = decodeURIComponent(e[2]);\\n\\t  }\\n\\n\\t  if(!hashParams.access_token) {\\n\\t    window.location.href = 'https://accounts.spotify.com/authorize?client_id=32e01da48975407b869e51284666b21a&response_type=token&redirect_uri=http://localhost:3000/spotify/callback';\\n\\t  } else {\\n\\t    this.props.setToken(hashParams.access_token);\\n\\t  }\\n\\n\\t}\\n\\n\\tcomponentWillReceiveProps(nextProps) {\\n\\t  if(nextProps.token) {\\n\\t\\t\\tthis.props.fetchUser(nextProps.token);\\n\\t\\t\\tthis.props.fetchSongs(nextProps.token);\\n\\t  };\\n\\t}\\n\\n\\trender() {\\n\\t  return (\\n\\t    <div>\\n\\t\\t\\t\\t<SongList/>\\n\\t    </div>\\n\\t  );\\n\\t}\\n}\\n\\nSpotify.propTypes = {\\n  token: PropTypes.string,\\n\\tfetchUser: PropTypes.func,\\n\\tfetchSongs: PropTypes.func,\\n\\tsetToken: PropTypes.func\\n};\\n\\nconst mapStateToProps = (state) => {\\n\\n  return {\\n    token: state.tokenReducer.token\\n  };\\n\\n};\\n\\nconst mapDispatchToProps = dispatch => {\\n\\n  return bindActionCreators({\\n\\t\\tfetchUser,\\n\\t\\tfetchSongs,\\n\\t\\tsetToken\\n  },dispatch);\\n\\n};\\n\\nexport default connect(mapStateToProps, mapDispatchToProps)(Spotify);\",\"import React from 'react';\\nimport { Link } from 'react-router-dom';\\n\\nfunction Footer (){\\n return <nav className=\\\"footer navbar navbar-light bg-info\\\">\\n    <form className=\\\"form-inline\\\">\\n      <Link className=\\\"btn btn-outline-success\\\" to=\\\"/about\\\">About us</Link>\\n    </form>\\n  </nav>\\n}\\n\\nexport default Footer;\",\"import React from 'react';\\n\\nfunction About (){\\n return <div className=\\\"container-fluid about\\\">\\n    <h3>What is Lorem Ipsum?</h3>\\n    <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\\n </div>\\n}\\n\\nexport default About;\",\"import React from 'react'\\nimport PropTypes from 'prop-types'\\nimport { Route } from 'react-router-dom'\\nimport Header from './Header'\\nimport Reddit from './Reddit'\\nimport Spotify from './Spotify'\\nimport Footer from './Footer'\\nimport About from './About'\\n\\nconst Root = ({ store }) => (\\n    <div>\\n      <Route path=\\\"/\\\" component={Header}/>\\n      <Route path=\\\"/reddit\\\" component={Reddit} />\\n      <Route path=\\\"/spotify\\\" component={Spotify} />\\n      <Route path=\\\"/about\\\" component={About} />\\n      <Route path=\\\"/\\\" component={Footer}/>\\n    </div>\\n)\\n\\nRoot.propTypes = {\\n  store: PropTypes.object.isRequired,\\n}\\n\\nexport default Root\\n\",\"export function register(config) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    var CACHE_NAME = 'my-pwa-cache-v1';\\n    var urlsToCache = [\\n      '/'\\n    ];\\n\\n    window.addEventListener('install', function(event) {\\n      event.waitUntil(\\n        caches.open(CACHE_NAME)\\n          .then(function(cache) {\\n            // Open a cache and cache our files\\n            return cache.addAll(urlsToCache);\\n          })\\n      );\\n    });\\n\\n    window.addEventListener('fetch', function(event) {\\n      console.log('asdfdsaf',event.request.url);\\n      event.respondWith(\\n          caches.match(event.request).then(function(response) {\\n              return response || fetch(event.request);\\n          })\\n      );\\n    });\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker-test.js`;\\n      console.log('swUrl',swUrl);\\n      checkValidServiceWorker(swUrl, config);\\n      registerValidSW(swUrl, config);\\n    });\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react'\\nimport { render } from 'react-dom'\\nimport { createStore, applyMiddleware } from 'redux'\\nimport thunk from 'redux-thunk'\\nimport { createLogger } from 'redux-logger'\\nimport reducer from './reducers'\\nimport Root from './containers/Root'\\nimport { Provider } from 'react-redux'\\nimport { BrowserRouter as Router } from 'react-router-dom'\\nimport '../node_modules/bootstrap-scss/bootstrap.scss';\\nimport * as serviceWorker from './serviceWorker';\\nimport \\\"./scss/styles.scss\\\";\\n\\nconst middleware = [ thunk ]\\nif (process.env.NODE_ENV !== 'production') {\\n  middleware.push(createLogger())\\n}\\n\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(...middleware)\\n)\\n\\nrender(\\n  <Router>\\n    <Provider store={store}>\\n      <Root store={store} />\\n    </Provider>\\n  </Router>,\\n  document.getElementById('root')\\n)\\n\\nserviceWorker.register();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{34:function(e,t,n){e.exports=n(75)},74:function(e,t,n){},75:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(27),c=n(3),s=n(28),i=n.n(s),l=(n(57),n(15)),u=n(1),d=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"SET_TOKEN\":return Object(u.a)({},e,{token:t.token});default:return e}},h={fetchSongsPending:!0},p=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:h,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"FETCH_SONGS_PENDING\":return Object(u.a)({},e,{fetchSongsPending:!0});case\"FETCH_SONGS_SUCCESS\":return Object(u.a)({},e,{songs:t.songs,fetchSongsError:!1,fetchSongsPending:!1});case\"FETCH_SONGS_ERROR\":return Object(u.a)({},e,{fetchSongsError:!0,fetchSongsPending:!1});default:return e}},f=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"FETCH_USER_SUCCESS\":return Object(u.a)({},e,{user:t.user,fetchUserError:!1});case\"FETCH_USER_ERROR\":return Object(u.a)({},e,{fetchUserError:!0});default:return e}},m=function(e){return{type:\"SELECT_SUBREDDIT\",subreddit:e}},E=function(e){return{type:\"INVALIDATE_SUBREDDIT\",subreddit:e}},g=function(e){return function(t){return t(function(e){return{type:\"REQUEST_POSTS\",subreddit:e}}(e)),fetch(\"https://www.reddit.com/r/\".concat(e,\".json\")).then(function(e){return e.json()}).then(function(n){return t(function(e,t){return{type:\"RECEIVE_POSTS\",subreddit:e,posts:t.data.children.map(function(e){return e.data}),receivedAt:Date.now()}}(e,n))})}},v=function(e){return function(t,n){if(function(e,t){var n=e.postsBySubreddit[t];return!n||!n.isFetching&&n.didInvalidate}(n(),e))return t(g(e))}},b=Object(c.combineReducers)({postsBySubreddit:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"INVALIDATE_SUBREDDIT\":case\"RECEIVE_POSTS\":case\"REQUEST_POSTS\":return Object(u.a)({},e,Object(l.a)({},t.subreddit,function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{isFetching:!1,didInvalidate:!1,items:[]},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"INVALIDATE_SUBREDDIT\":return Object(u.a)({},e,{didInvalidate:!0});case\"REQUEST_POSTS\":return Object(u.a)({},e,{isFetching:!0,didInvalidate:!1});case\"RECEIVE_POSTS\":return Object(u.a)({},e,{isFetching:!1,didInvalidate:!1,items:t.posts,lastUpdated:t.receivedAt});default:return e}}(e[t.subreddit],t)));default:return e}},tokenReducer:d,songsReducer:p,userReducer:f,selectedSubreddit:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"reactjs\",t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"SELECT_SUBREDDIT\":return t.subreddit;default:return e}}}),S=n(8),y=n(7);var k=function(){return r.a.createElement(\"nav\",{className:\"navbar navbar-light bg-dark\"},r.a.createElement(\"form\",{className:\"form-inline\"},r.a.createElement(y.b,{className:\"btn btn-outline-success\",to:\"/reddit\"},\"reddit\"),r.a.createElement(y.b,{className:\"btn btn-outline-success\",to:\"/spotify\"},\"spotify\")))},w=n(9),O=n(10),R=n(12),j=n(11),N=n(13),T=n(6),_=function(e){var t=e.value,n=e.onChange,a=e.options;return r.a.createElement(\"span\",null,r.a.createElement(\"h1\",null,\"Selected Subreddit: \",t),r.a.createElement(\"select\",{className:\"btn btn-success\",onChange:function(e){return n(e.target.value)},value:t},a.map(function(e){return r.a.createElement(\"option\",{value:e,key:e},e)})))},C=function(e){var t=e.posts;return r.a.createElement(\"div\",null,t.map(function(e,t){return r.a.createElement(\"div\",{key:t},e.title)}))},U=function(e){function t(){var e,n;Object(w.a)(this,t);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(n=Object(R.a)(this,(e=Object(j.a)(t)).call.apply(e,[this].concat(r)))).handleChange=function(e){n.props.dispatch(m(e))},n.handleRefreshClick=function(e){e.preventDefault();var t=n.props,a=t.dispatch,r=t.selectedSubreddit;a(E(r)),a(v(r))},n}return Object(N.a)(t,e),Object(O.a)(t,[{key:\"componentDidMount\",value:function(){var e=this.props,t=e.dispatch,n=e.selectedSubreddit;t(v(n))}},{key:\"componentDidUpdate\",value:function(e){if(e.selectedSubreddit!==this.props.selectedSubreddit){var t=this.props,n=t.dispatch,a=t.selectedSubreddit;n(v(a))}}},{key:\"render\",value:function(){var e=this.props,t=e.selectedSubreddit,n=e.posts,a=e.isFetching,o=e.lastUpdated,c=0===n.length;return r.a.createElement(\"div\",{className:\"container-fluid\"},r.a.createElement(_,{value:t,onChange:this.handleChange,options:[\"reactjs\",\"frontend\"]}),r.a.createElement(\"p\",null,o&&r.a.createElement(\"span\",null,\"Last updated at \",new Date(o).toLocaleTimeString(),\".\",\" \"),!a&&r.a.createElement(\"button\",{className:\"btn btn-success\",onClick:this.handleRefreshClick},\"Refresh\")),c?a?r.a.createElement(\"h2\",null,\"Loading...\"):r.a.createElement(\"h2\",null,\"Empty.\"):r.a.createElement(\"div\",{style:{opacity:a?.5:1}},r.a.createElement(C,{posts:n})))}}]),t}(a.Component),I=Object(T.b)(function(e){var t=e.selectedSubreddit,n=e.postsBySubreddit[t]||{isFetching:!0,items:[]},a=n.isFetching,r=n.lastUpdated;return{selectedSubreddit:t,posts:n.items,isFetching:a,lastUpdated:r}})(U),P=function(e){return function(t){var n=new Request(\"https://api.spotify.com/v1/me\",{headers:new Headers({Authorization:\"Bearer \"+e})});fetch(n).then(function(e){return\"Unauthorized\"===e.statusText&&(window.location.href=\"./\"),e.json()}).then(function(e){t({type:\"FETCH_USER_SUCCESS\",user:e})}).catch(function(e){t({type:\"FETCH_USER_ERROR\"})})}},A=function(e){return function(t){var n=new Request(\"https://api.spotify.com/v1/me/player/recently-played\",{headers:new Headers({Authorization:\"Bearer \"+e})});t({type:\"FETCH_SONGS_PENDING\"}),fetch(n).then(function(e){return\"Unauthorized\"===e.statusText&&(window.location.href=\"./\"),e.json()}).then(function(e){t({type:\"FETCH_SONGS_SUCCESS\",songs:e.items})}).catch(function(e){t({type:\"FETCH_SONGS_ERROR\"})})}},D=function(e){return{type:\"SET_TOKEN\",token:e}},L=n(33),F=n.n(L),H=function(e){function t(){return Object(w.a)(this,t),Object(R.a)(this,Object(j.a)(t).apply(this,arguments))}return Object(N.a)(t,e),Object(O.a)(t,[{key:\"componentWillReceiveProps\",value:function(e){\"\"!==e.token&&!e.fetchSongsError&&e.fetchSongsPending&&this.props.fetchSongs(e.token)}},{key:\"msToMinutesAndSeconds\",value:function(e){var t=Math.floor(e/6e4),n=(e%6e4/1e3).toFixed(0);return t+\":\"+(n<10?\"0\":\"\")+n}},{key:\"renderSongs\",value:function(){var e=this;return this.props.songs.map(function(t,n){return r.a.createElement(\"div\",{key:n,className:\"row\"},r.a.createElement(\"div\",{className:\"col-sm-2\"},r.a.createElement(\"p\",null,t.track.name)),r.a.createElement(\"div\",{className:\"col-sm-2\"},r.a.createElement(\"p\",null,t.track.artists[0].name)),r.a.createElement(\"div\",{className:\"col-sm-2\"},r.a.createElement(\"p\",null,t.track.album.name)),r.a.createElement(\"div\",{className:\"col-sm-2\"},r.a.createElement(\"p\",null,F()(t.added_at).format(\"YYYY-MM-DD\"))),r.a.createElement(\"div\",{className:\"col-sm-2\"},r.a.createElement(\"p\",null,e.msToMinutesAndSeconds(t.track.duration_ms))))})}},{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"container-fluid\"},r.a.createElement(\"h1\",null,\"Last played songs\"),r.a.createElement(\"div\",{className:\"row\"},r.a.createElement(\"div\",{className:\"col-sm-2 bg-info\"},r.a.createElement(\"p\",null,\"Title\")),r.a.createElement(\"div\",{className:\"col-sm-2 bg-info\"},r.a.createElement(\"p\",null,\"Artist\")),r.a.createElement(\"div\",{className:\"col-sm-2 bg-info\"},r.a.createElement(\"p\",null,\"Album\")),r.a.createElement(\"div\",{className:\"col-sm-2 bg-info\"},r.a.createElement(\"p\",null,\"Date Added\")),r.a.createElement(\"div\",{className:\"col-sm-2 bg-info\"},r.a.createElement(\"p\",null,\"Length\"))),this.props.songs&&!this.props.fetchSongsPending&&!this.props.fetchPlaylistSongsPending&&this.renderSongs())}}]),t}(a.Component),B=Object(T.b)(function(e){return{token:e.tokenReducer.token?e.tokenReducer.token:\"\",songs:e.songsReducer.songs?e.songsReducer.songs:\"\",fetchSongsError:e.songsReducer.fetchSongsError,fetchSongsPending:e.songsReducer.fetchSongsPending,fetchPlaylistSongsPending:e.songsReducer.fetchPlaylistSongsPending}},function(e){return Object(c.bindActionCreators)({fetchSongs:A},e)})(H),M=function(e){function t(){return Object(w.a)(this,t),Object(R.a)(this,Object(j.a)(t).apply(this,arguments))}return Object(N.a)(t,e),Object(O.a)(t,[{key:\"componentDidMount\",value:function(){for(var e,t={},n=/([^&;=]+)=?([^&;]*)/g,a=window.location.hash.substring(1);e=n.exec(a);)t[e[1]]=decodeURIComponent(e[2]);t.access_token?this.props.setToken(t.access_token):window.location.href=\"https://accounts.spotify.com/authorize?client_id=32e01da48975407b869e51284666b21a&response_type=token&redirect_uri=http://localhost:3000/spotify/callback\"}},{key:\"componentWillReceiveProps\",value:function(e){e.token&&(this.props.fetchUser(e.token),this.props.fetchSongs(e.token))}},{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(B,null))}}]),t}(a.Component),x=Object(T.b)(function(e){return{token:e.tokenReducer.token}},function(e){return Object(c.bindActionCreators)({fetchUser:P,fetchSongs:A,setToken:D},e)})(M);var G=function(){return r.a.createElement(\"nav\",{className:\"footer navbar navbar-light bg-info\"},r.a.createElement(\"form\",{className:\"form-inline\"},r.a.createElement(y.b,{className:\"btn btn-outline-success\",to:\"/about\"},\"About us\")))};var W=function(){return r.a.createElement(\"div\",{className:\"container-fluid about\"},r.a.createElement(\"h3\",null,\"What is Lorem Ipsum?\"),r.a.createElement(\"p\",null,\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"))},V=function(e){e.store;return r.a.createElement(\"div\",null,r.a.createElement(S.a,{path:\"/\",component:k}),r.a.createElement(S.a,{path:\"/reddit\",component:I}),r.a.createElement(S.a,{path:\"/spotify\",component:x}),r.a.createElement(S.a,{path:\"/about\",component:W}),r.a.createElement(S.a,{path:\"/\",component:G}))};n(73);function q(e,t){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var n=e.installing;null!=n&&(n.onstatechange=function(){\"installed\"===n.state&&(navigator.serviceWorker.controller?(console.log(\"New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.\"),t&&t.onUpdate&&t.onUpdate(e)):(console.log(\"Content is cached for offline use.\"),t&&t.onSuccess&&t.onSuccess(e)))})}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}n(74);var z=[i.a];var Y=Object(c.createStore)(b,c.applyMiddleware.apply(void 0,z));Object(o.render)(r.a.createElement(y.a,null,r.a.createElement(T.a,{store:Y},r.a.createElement(V,{store:Y}))),document.getElementById(\"root\")),function(e){if(new URL(\"/akisusd/akisusd.github.io/reacttutorial\",window.location.href).origin===window.location.origin){var t=[\"/\"];window.addEventListener(\"install\",function(e){e.waitUntil(caches.open(\"my-pwa-cache-v1\").then(function(e){return e.addAll(t)}))}),window.addEventListener(\"fetch\",function(e){console.log(\"asdfdsaf\",e.request.url),e.respondWith(caches.match(e.request).then(function(t){return t||fetch(e.request)}))}),window.addEventListener(\"load\",function(){var t=\"\".concat(\"/akisusd/akisusd.github.io/reacttutorial\",\"/service-worker-test.js\");console.log(\"swUrl\",t),function(e,t){fetch(e).then(function(n){var a=n.headers.get(\"content-type\");404===n.status||null!=a&&-1===a.indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):q(e,t)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(t,e),q(t,e)})}}()}},[[34,1,2]]]);","extractedComments":[]}